<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   id="tray_explode"
   class="tray_explode tray"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   width="200" height="150"
   viewBox="0 0 200 150"
   >
  <defs id="defs_tray_explode">
    <filter id="app-filter-colorize" color-interpolation-filters="sRGB" >
      <feColorMatrix id="recolorize-filter-matrix" type="matrix"
         values="1.0 0.0 0.0 0.0  0.0
                 1.0 0.0 0.0 0.0  0.0
                 1.0 0.0 0.0 0.0  0.0
                 0.0 0.0 0.0 1.0  0.0" />
    </filter>
  </defs>
  <script
     type="text/javascript"
     data-namespace="tray_explode"
     id="script_tray_explode"><![CDATA[
var tray_explode = {

  contents_change_handler: function(elem) {
    let sum = 0
    let steps = 0
    let stepLimit = 20

    target_tspan = elem.querySelector(`#${elem.id} > svg .tspan_rule_num`)
    let target = parseInt(target_tspan.textContent)

    function explode_it(rollable) {
      steps++
      if (steps > stepLimit) {
        return Infinity
      }
      let tempNum = tray.get_numeric_value(rollable)

      let handlers = ui.augmented_handlers_for_element(rollable)
      if (!handlers || !handlers['die_roll']) {
        return tempNum
      }
      if (tempNum >= target) {
        handlers['die_roll']()
        return tempNum + explode_it(rollable)
      } else {
        return tempNum
      }
    }

    tray.visit_contents_group(elem, (s) => {
      sum += explode_it(s)
    })

    let tspan = elem.querySelector(`#${elem.id} > .result_container .tspan_result`)
    tspan.textContent = sum
  },

  menu: {
    'Roll All': {
      eventName: 'tray_roll',
      applicable: (node) => { return true },
      handler: function(evt) {
        return tray.roll_handler(this, evt)
      },
    },
    'Target +': {
      eventName: 'rule_explode_plus',
      applicable: (node) => { return true },
      handler: function() {
        tray_explode.explode_change_handler(this, +1)
      },
    },
    'Target -': {
      eventName: 'rule_explode_minus',
      applicable: (node) => { return true },
      handler: function() {
        tray_explode.explode_change_handler(this, -1)
      },
    },
  },

  explode_change_handler: function(elem, change) {
    // console.log('explode_change_handler', elem.id, change)
    target_tspan = elem.querySelector(`#${elem.id} > svg .tspan_rule_num`)
    howMany = parseInt(target_tspan.textContent)
    let sum = howMany + change
    target_tspan.textContent = sum
    tray_explode.contents_change_handler(elem)
  },

}
    ]]></script>
  <script
    type="text/javascript"
    src="js/tray.js"
    data-namespace="tray"
    id="script_tray" />
  <svg id="resizable_bg"
    x="0" y="0" width="200" height="150"
    viewBox="0 0 200 150"
    preserveAspectRatio="none"
    class="droptarget"
  >
    <rect
       id="shadow_rect"
       fill="#000"
       opacity="0.4"
       x="4" y="4"
       width="196"
       height="146"
    />
    <rect
       id="white_rect"
       fill="#fff"
       x="0" y="0"
       width="190"
       height="140"
    />
    <g id="group-monochrome-1" class="colorable" filter="url(#app-filter-colorize)">
      <rect
         id="stroke_rect"
         fill-opacity="0"
         stroke="#d3d3d3"
         stroke-width="2"
         style="stroke-miterlimit:4;stroke-opacity:1"
         x="1" y="1"
         width="190"
         height="140"
      />
    </g>
    <rect
       id="dashed_hover_indicator"
       class="hover_indicator"
       opacity="0"
       fill-opacity="0"
       stroke="#f3f3f3"
       stroke-width="2"
       style="stroke-opacity:1;stroke-dasharray:5"
       x="1" y="1"
       width="190"
       height="140"
    />
  </svg>
  <svg id="label_container" x="10" y="0" >
    <text
       id="text_label"
       y="30"
       x="0"
       style="font-style:normal;font-weight:normal;
       font-size:28px;line-height:125%;font-family:SubotypeSteady;
       letter-spacing:0px;word-spacing:0px;
       fill:#000080;fill-opacity:1;
       "
       xml:space="preserve"><tspan
         style="font-style:normal;font-variant:normal;font-weight:normal;
         font-family:SubotypeSteady;
         fill:#000080"
         id="tspan_label"
         class="tspan_label"
         >Label</tspan></text>
  </svg>
  <g id="contents_group" class="contents_group">
  </g>
  <svg id="result_container"
  x="0" y="75%"
  width="95%" height="50"
  viewBox="0 0 140 50" preserveAspectRatio="xMaxYMin meet" >
    <rect id="text_bg" width="140" height="30" fill="white" opacity="0.4" />
    <text
       id="text_rule"
       class="text_rule"
       x="0"
       y="30"
       style="font-style:normal;font-variant:normal;font-weight:bold;
       font-size:34px;line-height:125%;font-family:SubotypeSteady;
       letter-spacing:0px;word-spacing:0px;
       fill:#000080;fill-opacity:1;"
       xml:space="preserve"
     ><tspan
         style="font-family:SubotypeSteady;fill:#000080;"
         id="tspan_rule_prefix"
         >Explode </tspan><tspan
           id="tspan_rule_num"
           class="tspan_rule_num"
           style="font-size:30px;font-weight:bold;font-family:SubotypeSteady;fill:#000080;"
         >6</tspan><tspan
           id="tspan_rule_suffix"
           style="font-size:30px;font-weight:normal;font-family:SubotypeSteady;fill:#000080;"
         >s =</tspan
    ></text>
    <text
       id="text_result"
       class="text_result"
       xml:space="preserve"
       style="font-style:normal;font-variant:normal;font-weight:normal;
       font-size:34px;line-height:125%;font-family:SubotypeSteady;
       letter-spacing:0px;word-spacing:0px;
       fill:#000080;fill-opacity:1;
       "
       x="110"
       y="30"
     ><tspan
         id="tspan_result"
         class="tspan_result"
         style="font-family:SubotypeSteady;fill:#000080"
         >0</tspan
    ></text>
  </svg>
</svg>
