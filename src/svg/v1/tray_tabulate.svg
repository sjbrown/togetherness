<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   id="tray_tabulate"
   class="tray_tabulate tray"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   width="500" height="150"
   viewBox="0 0 500 150"
   >
  <defs id="defs_tray_tabulate">
    <filter id="app-filter-colorize" color-interpolation-filters="sRGB" >
      <feColorMatrix id="recolorize-filter-matrix" type="matrix"
         values="1.0 0.0 0.0 0.0  0.0
                 1.0 0.0 0.0 0.0  0.0
                 1.0 0.0 0.0 0.0  0.0
                 0.0 0.0 0.0 1.0  0.0" />
    </filter>
  </defs>
  <script
     type="text/javascript"
     data-namespace="tray_tabulate"
     id="script_tray_tabulate"><![CDATA[
var tray_tabulate = {

  contents_change_handler: function(elem) {
    // console.log('contents_change_handler ', elem.id)

    let allValues = tray.get_contents_values(elem)
    let table = {}
    Object.values(allValues).forEach(v => {
      if (Array.isArray(v)) {
        v.forEach(vv => {
          table[vv] = (table[vv] === undefined) ? 1 : table[vv] + 1
        })
      } else {
        table[v] = (table[v] === undefined) ? 1 : table[v] + 1
      }
    })
    let tspan = elem.querySelector(`#${elem.id} > svg .tspan_result`)
    tspan.textContent = JSON.stringify(table)
  },

  menu: {
    'Roll All': {
      eventName: 'tray_roll',
      applicable: (node) => { return true },
      handler: function(evt) {
        return tray.roll_handler(this, evt)
      },
    },
  },

}
    ]]></script>
  <script
    type="text/javascript"
    src="js/tray.js"
    data-namespace="tray"
    id="script_tray" />
  <svg id="resizable_bg"
    x="0" y="0" width="500" height="150"
    viewBox="0 0 500 150"
    preserveAspectRatio="none"
    class="droptarget"
  >
    <rect
       id="shadow_rect"
       fill="#000"
       opacity="0.4"
       x="4" y="4"
       width="496"
       height="146"
    />
    <rect
       id="white_rect"
       fill="#fff"
       x="0" y="0"
       width="490"
       height="140"
    />
    <g id="group-monochrome-1" class="colorable" filter="url(#app-filter-colorize)">
      <rect
         id="stroke_rect"
         fill-opacity="0"
         stroke="#d3d3d3"
         stroke-width="2"
         style="stroke-miterlimit:4;stroke-opacity:1"
         x="1" y="1"
         width="490"
         height="140"
      />
    </g>
    <rect
       id="dashed_hover_indicator"
       class="hover_indicator"
       opacity="0"
       fill-opacity="0"
       stroke="#f3f3f3"
       stroke-width="2"
       style="stroke-opacity:1;stroke-dasharray:5"
       x="1" y="1"
       width="490"
       height="140"
    />
  </svg>
  <svg id="label_container" x="10" y="0" >
    <text
       id="text_label"
       y="30"
       x="0"
       style="font-style:normal;font-weight:normal;
       font-size:28px;line-height:125%;font-family:SubotypeSteady;
       letter-spacing:0px;word-spacing:0px;
       fill:#000080;fill-opacity:1;
       "
       xml:space="preserve"><tspan
         style="font-style:normal;font-variant:normal;font-weight:normal;
         font-family:SubotypeSteady;
         fill:#000080"
         id="tspan_label"
         class="tspan_label"
         >Label</tspan></text>
  </svg>
  <g id="contents_group" class="contents_group">
  </g>
  <svg id="result_container"
  x="10" y="75%"
  width="95%" height="50"
  viewBox="0 0 500 50" preserveAspectRatio="xMinYMin meet" >
    <rect id="text_bg" width="500" height="30" fill="white" opacity="0.4" />
    <text
       id="text_result"
       class="text_result"
       xml:space="preserve"
       style="font-style:normal;font-variant:normal;font-weight:normal;
       font-size:34px;line-height:125%;font-family:SubotypeSteady;
       letter-spacing:0px;word-spacing:0px;
       fill:#000080;fill-opacity:1;
       "
       x="0"
       y="30"
     ><tspan
         id="tspan_result"
         class="tspan_result"
         style="font-family:SubotypeSteady;fill:#000080"
         >{}</tspan
    ></text>
  </svg>
</svg>
